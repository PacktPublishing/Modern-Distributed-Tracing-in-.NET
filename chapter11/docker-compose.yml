version: "3.9"
services:
  producer:
    build:
      dockerfile: ./producer/Dockerfile
    ports:
      - "5051:5051"
    environment:
      - ASPNETCORE_URLS=http://+:5051
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcollector:4317
      - OTEL_SERVICE_NAME=producer
      - OTEL_METRIC_EXPORT_INTERVAL=5000
      - Queue__ConnectionString=DefaultEndpointsProtocol=http;AccountName=myaccount;AccountKey=bm9rZXkx;QueueEndpoint=http://myaccount:10001/myaccount;
  consumer:
    build:
      dockerfile: ./consumer/Dockerfile
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcollector:4317
      - OTEL_SERVICE_NAME=consumer
      - OTEL_METRIC_EXPORT_INTERVAL=5000
      - Queue__ConnectionString=DefaultEndpointsProtocol=http;AccountName=myaccount;AccountKey=bm9rZXkx;QueueEndpoint=http://myaccount:10001/myaccount;
    volumes:
      - ./cert:/https:ro
  myaccount:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10001:10001"
    environment:
      - AZURITE_ACCOUNTS=myaccount:bm9rZXkx
  otelcollector:
    image: otel/opentelemetry-collector-contrib:0.78.0
    command: ["--config=/etc/otel-collector-config.yml"]
    ports:
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    volumes:
      - ./configs/otel-collector-config.yml:/etc/otel-collector-config.yml
    depends_on:
      - jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.45.0
    ports:
      - "14250:14250"
      - "14268:14268"
      - "6831:6831/udp"
      - "16686:16686"
      - "16685:16685"
  prometheus:
    image: prom/prometheus:v2.44.0
    volumes:
      - ./configs/prometheus-otel.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - otelcollector
